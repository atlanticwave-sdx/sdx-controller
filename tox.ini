[tox]
envlist = py3

requires =
    tox>=4

[testenv]
deps =
    [test]

allowlist_externals = printenv

commands =
    # First print the env vars so we know what we're using.
    printenv
    # Then run the tests.
    pytest --cov sdx_controller --cov bapm_server {posargs}

setenv =
    SDX_HOST = localhost
    SDX_PORT = 8080
    SDX_NAME = sdx-controller-test
    MQ_HOST = localhost
    MQ_PORT = 5672
    SUB_QUEUE = oxp_update
    MONGO_USER = guest
    MONGO_PASS = guest
    MONGO_HOST = localhost
    MONGO_PORT = 27017
    DB_NAME = sdx-controller-test-db
    DB_CONFIG_TABLE_NAME = sdx-controller-test-table

docker =
    rabbitmq
    mongo

[docker:rabbitmq]
image = rabbitmq:latest

# This will update MQ_HOST in testenv.
host_var = MQ_HOST

# This will update MQ_PORT in testenv.
expose =
    MQ_PORT=5672/tcp

healthcheck_cmd = rabbitmq-diagnostics -q ping

[docker:mongo]
image = mongo:7.0.11

# This will update MONGO_HOST in testenv.
host_var = MONGO_HOST

# This will update MONGO_PORT in testenv.
expose =
    MONGO_PORT=27017/tcp

environment =
    MONGO_INITDB_ROOT_USERNAME=guest
    MONGO_INITDB_ROOT_PASSWORD=guest

healthcheck_cmd = mongosh localhost:27017/test --quiet
