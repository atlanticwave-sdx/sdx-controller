version: '3.8'

services:

  mongodb:
    # See https://hub.docker.com/_/mongo/ for documentation about
    # MongoDB Docker images.
    image: mongo:3.7
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      # See https://docs.docker.com/storage/volumes/
      #
      # The 'Z' option tells Docker to label the content with a
      # private unshared label. Private volumes can only be used by
      # the current container.  See
      # https://docs.docker.com/engine/reference/commandline/run/
      - type: volume
        source: mongodb
        target: /data/db:Z
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.version()"]
      interval: 10s
      timeout: 5s
      retries: 3

  sdx-controller:
    image: sdx-controller
    depends_on:
      mongodb:
        condition: service_healthy
    tty: true
    build: ./
    ports:
      - 8080:8080
    environment:
      # Use mongodb service specified above.  Note that we do not use
      # the same MONGODB_CONNSTRING variable from .env here, because
      # that is helpful for running unit/integration tests.
      - MONGODB_CONNSTRING=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:${MONGO_PORT}/
      - SDX_HOST=${SDX_HOST}
      - SDX_PORT=${SDX_PORT}
      - SDX_VERSION=${SDX_VERSION}
      - MQ_HOST=${MQ_HOST}
      - SUB_QUEUE=${SUB_QUEUE}
      - DB_NAME=${DB_NAME}
      - DB_CONFIG_TABLE_NAME=${DB_CONFIG_TABLE_NAME}

volumes:
  mongodb:
