# This workflow will install Python dependencies, run tests and lint
# with a variety of Python versions.  For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test

on:
  push:
    branches:
      - "main"
  pull_request:

permissions:
  contents: read

jobs:
  test:

    runs-on:
      - ubuntu-latest

    services:
      rabbitmq:
        image: rabbitmq:latest
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672:5672
          - 15672:15672

      mongodb:
        image: mongo:7.0.11
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: guest
          MONGO_INITDB_ROOT_PASSWORD: guest

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"

    steps:

      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'  # cache pip dependencies

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 .[test]

      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or
          # undefined names.
          python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. Black's default
          # is is 88 chars wide.
          python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

      - name: Run tests
        run: |
          # Run tests and collect coverage data.
          python -m pytest
          # Generate LCOV format coverage data for coveralls.
          python -m coverage lcov -o coverage.lcov
        env:
          SDX_HOST: 'localhost'
          SDX_PORT: '8080'
          SDX_NAME: 'sdx-controller-test'
          MQ_HOST: 'localhost'
          MQ_PORT: '5672'
          MQ_USER: 'guest'
          MQ_PASS: 'guest'
          SUB_QUEUE: 'sdx-controller-test-queue'
          MONGO_HOST: 'localhost'
          MONGO_PORT: '27017'
          MONGO_USER: 'guest'
          MONGO_PASS: 'guest'
          DB_NAME: 'sdx-controllder-test-db'
          DB_CONFIG_TABLE_NAME: 'sdx-controller-test-table'

        timeout-minutes: 3

      - name: Send coverage data to coveralls.io
        uses: coverallsapp/github-action@v2
        with:
          flag-name: run-${{ join(matrix.*, '-') }}
          file: coverage.lcov
          parallel: true

  finalize:
    name: finalize
    needs: test
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Indicate completion to coveralls.io
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true
